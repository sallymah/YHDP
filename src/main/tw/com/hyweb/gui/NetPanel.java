/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NetPanel.java
 *
 * Created on 2010/6/7, 01:52:51
 */

package tw.com.hyweb.gui;

import java.util.HashMap;
import tw.com.hyweb.admin.JmxClient;
import tw.com.hyweb.util.ISOUtil;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import tw.com.hyweb.online.mbean.AgentMBean;

/**
 *
 * @author SamSon
 */
public class NetPanel extends javax.swing.JPanel
{
    private DefMainGui defMainGui;
    private JmxClient jmxClient;
    private String netBeanName = "bean:name=NetEventHandler";
    private String netBeanMethod = "sendNetworkMgmt=";

    private String[] jmxCmd = null;

    /** Creates new form NetPanel */
    public NetPanel(DefMainGui defMainGui)
    {
        this.defMainGui = defMainGui;
        jmxClient = defMainGui.getJmxClient();
        jmxCmd = new String[]{jmxClient.getHostport(),netBeanName,netBeanMethod+"301"};
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEcho = new javax.swing.JButton();
        btnSignOn = new javax.swing.JButton();
        btnSignOff = new javax.swing.JButton();
        btnHeartBeat = new javax.swing.JButton();
        labelEcho = new javax.swing.JLabel();
        labelSignOn = new javax.swing.JLabel();
        labelSignOff = new javax.swing.JLabel();
        labelHeartBeat = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnQueryStatus = new javax.swing.JButton();
        labelInq = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taMsg = new javax.swing.JTextArea();

        btnEcho.setText("Echo");
        btnEcho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEchoActionPerformed(evt);
            }
        });

        btnSignOn.setText("Sign On");
        btnSignOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOnActionPerformed(evt);
            }
        });

        btnSignOff.setText("Sign Off");
        btnSignOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOffActionPerformed(evt);
            }
        });

        btnHeartBeat.setText("Heart Beat");
        btnHeartBeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHeartBeatActionPerformed(evt);
            }
        });

        btnQueryStatus.setText("Query Status");
        btnQueryStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryStatusActionPerformed(evt);
            }
        });

        taMsg.setColumns(20);
        taMsg.setRows(5);
        jScrollPane1.setViewportView(taMsg);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(39, 39, 39)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, btnEcho, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, btnSignOn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, btnSignOff, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, btnHeartBeat, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(labelHeartBeat, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .add(labelSignOff, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .add(labelSignOn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .add(labelEcho, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))
                .addContainerGap(47, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(38, 38, 38)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(btnQueryStatus, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(labelInq, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 228, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnEcho)
                    .add(labelEcho))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnSignOn)
                    .add(labelSignOn))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnSignOff)
                    .add(labelSignOff))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnHeartBeat)
                    .add(labelHeartBeat))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnQueryStatus)
                    .add(labelInq))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        labelInq.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnEchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEchoActionPerformed
        labelEcho.setText("send echo message.");
        jmxCmd[2]=netBeanMethod+"301";
        try
        {
            Object obj = jmxClient.execute(jmxCmd);
            if (obj==null)
            {
                labelEcho.setText("no response return.");
            }
            else
            {
                labelEcho.setText(obj.toString());
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            labelEcho.setText(e.getMessage());
            jmxClient.stopService();
        }
    }//GEN-LAST:event_btnEchoActionPerformed

    private void btnSignOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOnActionPerformed
        labelSignOn.setText("send sign on message.");
        jmxCmd[2]=netBeanMethod+"001";
        try
        {
            Object obj = jmxClient.execute(jmxCmd);
            if (obj==null)
            {
                labelSignOn.setText("no response return.");
            }
            else
            {
                labelEcho.setText(obj.toString());
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            labelSignOn.setText(e.getMessage());
            jmxClient.stopService();
        }
    }//GEN-LAST:event_btnSignOnActionPerformed

    private void btnSignOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOffActionPerformed
        labelSignOff.setText("send sign off message.");
        jmxCmd[2]=netBeanMethod+"002";
        try
        {
            Object obj = jmxClient.execute(jmxCmd);
            if (obj==null)
            {
                labelSignOff.setText("no response return.");
            }
            else
            {
                labelEcho.setText(obj.toString());
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            labelSignOff.setText(e.getMessage());
            jmxClient.stopService();
        }
    }//GEN-LAST:event_btnSignOffActionPerformed

    private void btnHeartBeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHeartBeatActionPerformed
        labelHeartBeat.setText("send echo message.");
        jmxCmd[2]=netBeanMethod+"301";
        new Thread()
        {
            public void run()
            {
                for(int i=0,failCnt=0;;i++)
                {
                    labelHeartBeat.setText("send..."+System.currentTimeMillis());
                    try
                    {
                        Object restult = jmxClient.execute(jmxCmd);
                        labelHeartBeat.setText("receive..."+restult+"..."+System.currentTimeMillis());
                    }
                    catch(Exception e)
                    {
                        failCnt++;
                        labelHeartBeat.setText("fail cnt="+failCnt);
                        //logger.warn("heart beat fail count:"+failCnt);
                    }
                    if (failCnt==3)
                    {
                        break;
                    }

                    ISOUtil.sleep(10000);
                }
                labelHeartBeat.setText("heart beat is stop...");
                jmxClient.stopService();
                String ret = defMainGui.mailto();
                labelHeartBeat.setText(ret);
            }
        }.start();
    }//GEN-LAST:event_btnHeartBeatActionPerformed

    private void btnQueryStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryStatusActionPerformed
        labelInq.setText("send inq status.");
        String inqBeanName = "bean:name=AgentMBean";
        String inqBeanMethod = "queryStatus";
        jmxCmd = new String[]{jmxClient.getHostport(),inqBeanName,inqBeanMethod};
        try
        {
            Object obj = jmxClient.execute(jmxCmd);
            if (obj==null)
            {
                labelInq.setText("no response return.");
            }
            String data = (String)obj;
            //taMsg.setText(data);
            JSONObject json = JSONObject.fromObject(data);
            boolean isApErr = json.getBoolean(AgentMBean.AP_ERR);
            boolean isDbErr = json.getBoolean(AgentMBean.DB_ERR);
            boolean isHsmErr = json.getBoolean(AgentMBean.HSM_ERR);
            labelInq.setText("AP:["+(isApErr?"Error":"OK")+"] DB:["+(isDbErr?"Error":"OK")+"] HSM:["+(isHsmErr?"Error":"OK")+"]");
            JSONArray jsonArr = json.getJSONArray(AgentMBean.TX_DATA);
            int size = jsonArr.size();
            for (int i =0;i<size;i++)
            {
                HashMap map = (HashMap)JSONObject.toBean(jsonArr.getJSONObject(i),HashMap.class);
                long txTime = (Long)map.get(AgentMBean.TX_TIME);
                int resptime = (Integer)map.get(AgentMBean.TX_RESPTIME);
                String rcode = (String)map.get(AgentMBean.TX_RCODE);
                taMsg.setText(taMsg.getText()+"\n"+"Time:"+txTime+" RespTime:"+resptime+" rcode:"+rcode);
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            labelInq.setText(e.getMessage());
            jmxClient.stopService();
        }
    }//GEN-LAST:event_btnQueryStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEcho;
    private javax.swing.JButton btnHeartBeat;
    private javax.swing.JButton btnQueryStatus;
    private javax.swing.JButton btnSignOff;
    private javax.swing.JButton btnSignOn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelEcho;
    private javax.swing.JLabel labelHeartBeat;
    private javax.swing.JLabel labelInq;
    private javax.swing.JLabel labelSignOff;
    private javax.swing.JLabel labelSignOn;
    private javax.swing.JTextArea taMsg;
    // End of variables declaration//GEN-END:variables

}
