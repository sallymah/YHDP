
/*
 * 
 */

package tw.com.hyweb.starbucks.wstest.querycard.gen;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.4
 * Mon Jul 29 14:11:25 CST 2013
 * Generated source version: 2.2.4
 * 
 */


@WebServiceClient(name = "QueryCardService", 
                  wsdlLocation = "file:QueryCardService.wsdl",
                  targetNamespace = "http://queryCard.ws.starbucks.hyweb.com.tw/") 
public class QueryCardService_Service extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://queryCard.ws.starbucks.hyweb.com.tw/", "QueryCardService");
    public final static QName QueryCardServiceImplPort = new QName("http://queryCard.ws.starbucks.hyweb.com.tw/", "QueryCardServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("file:QueryCardService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:QueryCardService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public QueryCardService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public QueryCardService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QueryCardService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns QueryCardService
     */
    @WebEndpoint(name = "QueryCardServiceImplPort")
    public QueryCardService getQueryCardServiceImplPort() {
        return super.getPort(QueryCardServiceImplPort, QueryCardService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QueryCardService
     */
//    @WebEndpoint(name = "QueryCardServiceImplPort")
//    public QueryCardService getQueryCardServiceImplPort(WebServiceFeature... features) {
//        return super.getPort(QueryCardServiceImplPort, QueryCardService.class, features);
//    }

}
